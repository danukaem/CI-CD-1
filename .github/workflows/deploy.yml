name: CI/CD - Angular + Spring Boot to EC2 (Windows)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Angular App
      working-directory: frontEnd-demo/demoFrontend
      run: |
        npm install
        npm run build --prod

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Build Spring Boot App
      working-directory: demo/demo
      run: ./mvnw clean package -DskipTests

    - name: Deploy to EC2 via WinRM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cmd /c "
            (if not exist C:\application\frontend_new mkdir C:\application\frontend_new) & 
            (if not exist C:\application\backend_new mkdir C:\application\backend_new)
          "

    - name: Upload Angular frontend
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "frontEnd-demo/demoFrontend/dist/demo-frontend/*"
        target: "C:/application/FE/"

    - name: Upload Spring Boot jar
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "demo/demo/target/demo-0.0.1-SNAPSHOT.jar"
        target: "C:/application/"

    - name: Create folder "abc" in EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          if not exist C:\application\abc mkdir C:\application\abc


    - name: Replace old app and restart services
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          taskkill /F /IM java.exe || echo "Java process not found, continuing..."
          timeout /t 10 || echo "waiting, continuing..."
          if not exist "C:/application/abcd" mkdir "C:/application/abcd"
          dir frontEnd-demo/demoFrontend/dist/demo-frontend
          move /Y C:/application/frontEnd-demo/demoFrontend/dist/demo-frontend/* C:/application/abc || echo MOVE FAILED
          move /Y C:/application/backend_new/demo-0.0.1-SNAPSHOT.jar C:/application/abc || echo MOVE FAILED
          start /B java -jar C:\application\demo-0.0.1-SNAPSHOT.jar
          cd C:\application\nginx-1.28.0
          nginx.exe -s reload
          
    # - name: Replace old app and restart services
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USER }}
    #     # password: ${{ secrets.EC2_PASSWORD }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     port: 22
    #     run: |  
    #       cd C:\application\nginx-1.28.0
    #       Start-Process start /B nginx" -Wait
    #       # cmd /c "taskkill /F /IM java.exe 
    #       #   && timeout /t 3 
    #       #   && move /Y C:\application\FE\frontEnd-demo\demoFrontend\dist\demo-frontend\* C:\application\FE\demo-frontend 
    #       #   && move /Y C:\application\demo\demo\target\demo-0.0.1-SNAPSHOT.jar C:\application\ 
    #       #   && start /B java -jar C:\application\demo-0.0.1-SNAPSHOT.jar 
    #       #   && cd C:\application\nginx-1.28.0 
    #       #   && start /B nginx"
          
    #       # taskkill /F /IM java.exe
    #       # timeout /t 3
    #       # # move C:/application/backend_new/demo-0.0.1-SNAPSHOT.jar C:/application/FE/demo-frontend
    #       # # move /Y C:/application/backend_new/demo-0.0.1-SNAPSHOT.jar C:/application/
    #       # move /Y C:/application/FE/frontEnd-demo/demoFrontend/dist/demo-frontend/* C:/application/FE/demo-frontend
    #       # move /Y C:/application/demo/demo/target/demo-0.0.1-SNAPSHOT.jar C:/application/
    #       # start /B java -jar C:/application/demo-0.0.1-SNAPSHOT.jar  
    #       # cd C:/application/nginx-1.28.0
    #       # # nginx.exe -s reload
    #       # start /B nginx
